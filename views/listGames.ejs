 <%- include('layout', { pageTitle: 'Liste des jeux' }) %>
  <body>
    <div id="container">
      <form id="search-form" onsubmit="searchBar(); return false;">
        <input
          type="text"
          id="searchInput"
          placeholder="Rechercher un jeu..."
        />
        <button class="button-search fas fa-search" type="submit"></button>
      </form>
      <h1>Liste de jeux en BDD</h1>
      <table class="styled-table" id="gameTable">
        <thead>
          <tr>
            <th>Nom</th>
            <th>Éditeur</th>
            <th>Catégorie</th>
            <th>Supprimer</th>
            <th>Modifier</th>
          </tr>
        </thead>
        <tbody>
          <% jeux.forEach(jeu => { %>
          <tr id="<%= jeu._id %>">
            <td><%= jeu.nom %></td>
            <td><%= jeu.editeur %></td>
            <td><%= jeu.categorie %></td>

            <td>
              <button
                class="button-delete fa fa-trash"
                data-id="<%= jeu._id %>"
              ></button>
            </td>
            <td>
              <button
                class="button-edit fas fa-edit"
                data-id="<%= jeu._id %>"
                data-nom="<%= jeu.nom %>"
                data-editeur="<%= jeu.editeur %>"
                data-categorie="<%= jeu.categorie %>"
              ></button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
      <dialog id="editGameModal">
        <h2 class="title-modale">Modifier un jeu</h2>
        <button class="close-modal">&times;</button>
        <hr />
        <form class="modale-style" action="/api/game/edit/" method="POST">
          <div>
            <label for="editGameName">Nom du jeu</label>
            <input type="text" id="editGameName" name="nom" required />
          </div>

          <div>
            <label for="editGamePublisher">Éditeur du jeu</label>
            <input type="text" id="editGamePublisher" name="editeur" required />
          </div>

          <div>
            <label for="editGameCategory">Catégorie du jeu</label>
            <input
              type="text"
              id="editGameCategory"
              name="categorie"
              required
            />
          </div>

          <button class="button-modale" type="submit">Enregistrer</button>
        </form>
      </dialog>

      <a href="/game/add" class="button-add">Ajouter un jeu</a>
    </div>
  </body>
</html>

<script>
  // Suppression d'un jeu
  const deleteBtns = document.querySelectorAll(".button-delete");
  deleteBtns.forEach((btn) => {
    btn.addEventListener("click", (event) => {
      const jeuId = event.target.dataset.id;
      fetch("/api/games/" + jeuId, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((response) => {
          if (response.ok) {
            location.href = "/games";
          } else {
          }
        })
        .catch((error) => {
          console.log("Erreur :", error);
        });
    });
  });

  // Modification d'un jeu
  const container = document.querySelector("#container");
  const editBtns = document.querySelectorAll(".button-edit");
  const editModal = document.querySelector("#editGameModal");
  const closeModalBtn = document.querySelector(".close-modal");
  const editForm = editModal.querySelector("form");
  let jeuId;

  editBtns.forEach((btn) => {
    btn.addEventListener("click", (event) => {
      jeuId = event.currentTarget.dataset.id;
      const jeuNom = event.currentTarget.dataset.nom;
      const jeuEditeur = event.currentTarget.dataset.editeur;
      const jeuCategorie = event.currentTarget.dataset.categorie;
     
      // Ouvrir la modale
      editModal.showModal();
      document.body.classList.add("modal-open");

      // Je pré-rempli les champs de la modale
      const editGameName = document.querySelector("#editGameName");
      const editGamePublisher = document.querySelector("#editGamePublisher");
      const editGameCategory = document.querySelector("#editGameCategory");

      editGameName.value = jeuNom;
      editGamePublisher.value = jeuEditeur;
      editGameCategory.value = jeuCategorie;

      jeuId = jeuId;
    });
  });

  closeModalBtn.addEventListener("click", () => {
    closeEditModal();
  });

  // Ferme la modale quand je clique en dehors de celle-ci
  window.addEventListener("click", (event) => {
    if (event.target === editModal) {
      closeEditModal();
    }
  });

  function closeEditModal() {
    editModal.close();
    document.body.classList.remove("modal-open");
  }

  editForm.addEventListener("submit", (event) => {
    event.preventDefault();

    const nom = editGameName.value;
    const editeur = editGamePublisher.value;
    const categorie = editGameCategory.value;
  
    // Envoi des données modifiées au serveur
    fetch("/api/game/" + jeuId, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        nom,
        editeur,
        categorie,
      }),
    })
      .then((response) => {
        if (response.ok) {
          // Fermer la modale
          closeEditModal();

          location.reload(); // Recharger la page pour afficher les modifications
        } else {
          console.log("Erreur lors de la sauvegarde des modifications");
        }
      })
      .catch((error) => {
        console.log("Erreur :", error);
      });
  });

  // Barre de recherche

  document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById("searchInput");
    const gameRows = document.querySelectorAll("#gameTable tbody tr");

    searchInput.addEventListener("input", searchBar);

    function searchBar() {
      let filter = searchInput.value.toLowerCase();

      gameRows.forEach(function (row) {
        let td = row.getElementsByTagName("td")[0];
        if (td) {
          let txtValue = td.textContent || td.innerText;
          if (txtValue.toLowerCase().indexOf(filter) > -1) {
            row.style.display = "";
          } else {
            row.style.display = "none";
          }
        }
      });
    }
  });
</script>
